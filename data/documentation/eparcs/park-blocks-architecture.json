{"abstract":[{"type":"text","text":"Database schema design decisions and the evolution of park block management in the e-parcs system."}],"variants":[{"paths":["\/documentation\/eparcs\/park-blocks-architecture"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/earth.defend.eparcs\/documentation\/eparcs\/Park-Blocks-Architecture"},"kind":"article","hierarchy":{"paths":[["doc:\/\/earth.defend.eparcs\/documentation\/eparcs"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"Park Blocks Architecture Design","roleHeading":"Article","modules":[{"name":"eparcs"}],"role":"article"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This document captures the architectural discussion and decision-making process around how to structure park blocks, map features, and their relationships in the e-parcs database schema. The conversation involved balancing data normalization principles with practical requirements for wildlife monitoring and geographic variability."}]},{"type":"heading","text":"The Challenge","level":2,"anchor":"The-Challenge"},{"type":"paragraph","inlineContent":[{"text":"The e-parcs system needed to implement a ","type":"text"},{"type":"strong","inlineContent":[{"text":"getHealthStatus","type":"text"}]},{"text":" feature that calculates park block health based on decay rates, thresholds, and patrol frequency. This raised fundamental questions about data architecture:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should park blocks be separate entities or part of the existing "},{"type":"codeVoice","code":"map_features"},{"type":"text","text":" table?"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How do we handle monitoring parameters (threshold, visibility, decay_rate) across different feature types?"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"What’s the best way to support geographic variability within park blocks?"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Initial-Approach-Merged-Schema","type":"heading","text":"Initial Approach: Merged Schema","level":2},{"inlineContent":[{"text":"Initially, park block data was merged into the ","type":"text"},{"code":"map_features","type":"codeVoice"},{"text":" table, resulting in:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct MapFeature {","    let name: String?","    let geometry: String?","    ","    \/\/ Only used by park blocks (90% null for incidents)","    let threshold: String?","    let decay_rate: String?  ","    let visibility: String?","    ","    \/\/ Only used by incidents (null for park blocks)","    let media_url: String?","}"]},{"text":"Problems Identified","type":"heading","level":3,"anchor":"Problems-Identified"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Data Sparsity"}],"type":"strong"},{"text":": 90% of records had null monitoring parameters","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Query Complexity"}],"type":"strong"},{"type":"text","text":": Required "},{"type":"codeVoice","code":"WHERE description = 'Administrative park zone'"},{"type":"text","text":" filtering everywhere"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Type Safety","type":"text"}],"type":"strong"},{"text":": Risk of applying health calculations to inappropriate feature types","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Validation Complexity"}],"type":"strong"},{"text":": Application-level logic needed to ensure data integrity","type":"text"}],"type":"paragraph"}]}]},{"text":"The Debate: Separation vs. Unification","level":2,"anchor":"The-Debate-Separation-vs-Unification","type":"heading"},{"text":"Argument for Separation","level":3,"anchor":"Argument-for-Separation","type":"heading"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Clement’s Position"}]},{"text":": Different entity types should have separate tables","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Park blocks"}]},{"type":"text","text":": Administrative zones with monitoring parameters"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Map features","type":"text"}],"type":"strong"},{"text":": Incident reports with media attachments","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Benefits"}],"type":"strong"},{"text":": Clean data model, type safety, optimized queries","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"anchor":"Argument-for-Unification","text":"Argument for Unification","type":"heading"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Martin’s Position","type":"text"}]},{"type":"text","text":": Shared attributes justify keeping entities together"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Blocks and Polygons","type":"text"}],"type":"strong"},{"type":"text","text":": Both need monitoring parameters (visibility, threshold, decay_rate)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Geographic Variability","type":"text"}],"type":"strong"},{"type":"text","text":": Visibility varies significantly within a single park block"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Layered Approach"}],"type":"strong"},{"text":": Different map layers sharing common monitoring attributes","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Key Insight: Geographic Granularity","level":2,"anchor":"Key-Insight-Geographic-Granularity","type":"heading"},{"inlineContent":[{"text":"Martin highlighted a crucial requirement that changed the discussion:","type":"text"}],"type":"paragraph"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"“My concern is, if we decide that only at block level do we allow these values, I think that e.g. the visibility varies highly throughout a block. So if there’s only one visibility throughout the whole block, we might not be able to reflect the variability within the block.”","type":"text"}]}],"style":"note","name":"Note"},{"type":"paragraph","inlineContent":[{"text":"This revealed that ","type":"text"},{"inlineContent":[{"text":"hotspots and polygons within blocks need custom monitoring parameters","type":"text"}],"type":"strong"},{"text":" to handle terrain variations (dense forest vs. open plains).","type":"text"}]},{"type":"heading","level":2,"anchor":"Proposed-Hybrid-Solution","text":"Proposed Hybrid Solution"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Clement suggested a hierarchical inheritance model:"}]},{"type":"codeListing","code":["\/\/ Park blocks provide defaults","park_blocks: { ","    block_name, ","    default_threshold, ","    default_visibility, ","    default_decay_rate ","}","","\/\/ Map features can override when needed","map_features: { ","    name, geometry, park_block_id, ","    threshold?, visibility?, decay_rate? ","}","","\/\/ Inheritance logic","effectiveThreshold = feature.threshold ?? parkBlock.default_threshold"],"syntax":"swift"},{"type":"heading","level":3,"anchor":"Benefits","text":"Benefits"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"✅ Supports granular control within blocks"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"✅ Inherits sensible defaults for most features","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"✅ Avoids data sparsity","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"✅ Maintains clear relationships","type":"text"}],"type":"paragraph"}]}]},{"text":"Final Decision: Unified Table","type":"heading","level":2,"anchor":"Final-Decision-Unified-Table"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After considering the geographic variability requirements, the team decided:"}]},{"text":"Keep All Feature Types in `map_features`","type":"heading","level":3,"anchor":"Keep-All-Feature-Types-in-mapfeatures"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Martin’s Reasoning","type":"text"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Blocks and Polygons"}],"type":"strong"},{"text":": Share monitoring attributes, belong together as different “layers”","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Points"}]},{"type":"text","text":": Have different attributes (media_url) but can coexist"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Null Tolerance","type":"text"}]},{"type":"text","text":": PowerSync handles sparse data well"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Future Flexibility","type":"text"}],"type":"strong"},{"text":": Can separate points later if needed","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"anchor":"Implementation-Strategy","text":"Implementation Strategy"},{"syntax":"swift","type":"codeListing","code":["struct MapFeature {","    let feature_type: String  \/\/ 'block', 'polygon', 'point'","    let name: String?","    let geometry: String?","    ","    \/\/ Monitoring parameters (used by blocks\/polygons)","    let threshold: Int?","    let visibility: Int?","    let decay_rate: Int?","    ","    \/\/ Media attributes (used by points)  ","    let media_url: String?","    let buffer_distance: String?","}"]},{"text":"Risk Mitigation","anchor":"Risk-Mitigation","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"To address the original concerns while using a unified table:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Add ","type":"text"},{"code":"feature_type","type":"codeVoice"},{"text":" column","type":"text"}]},{"type":"text","text":" for type-safe queries"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Implement validation"}]},{"text":" to ensure blocks have required monitoring fields","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Use type guards","type":"text"}]},{"type":"text","text":" in health status calculations"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Document inheritance patterns","type":"text"}]},{"text":" for polygon defaults","type":"text"}],"type":"paragraph"}]}]},{"text":"Health Status Implementation","anchor":"Health-Status-Implementation","type":"heading","level":2},{"inlineContent":[{"text":"The health status feature works across the unified schema:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["func getHealthStatus(for feature: MapFeature) -> HealthStatus {","    \/\/ Only calculate for monitoring features","    guard feature.feature_type == \"block\" || feature.feature_type == \"polygon\" else {","        return .unknown","    }","    ","    let threshold = feature.threshold ?? getBlockDefault(feature.park_block_id)","    let decayRate = feature.decay_rate ?? getBlockDefault(feature.park_block_id)","    ","    \/\/ Health calculation logic...","}"],"type":"codeListing"},{"level":2,"text":"Lessons Learned","type":"heading","anchor":"Lessons-Learned"},{"level":3,"text":"Key Takeaways","anchor":"Key-Takeaways","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Geographic Context Matters","type":"text"}]},{"type":"text","text":": Real-world variability within zones requires granular parameter control"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Shared Attributes Indicate Relationship"}]},{"text":": When entities share significant attributes, consider unified storage","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Sparse Data Isn’t Always Bad"}],"type":"strong"},{"text":": Modern databases handle null columns efficiently","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Type Safety Can Be Added","type":"text"}]},{"text":": Use enums and validation rather than separate tables for type safety","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Document Architectural Decisions","type":"text"}],"type":"strong"},{"type":"text","text":": Complex discussions need permanent documentation"}]}]}],"type":"orderedList"},{"level":3,"anchor":"Future-Considerations","type":"heading","text":"Future Considerations"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Points Separation"}],"type":"strong"},{"type":"text","text":": May revisit splitting points into separate table if media workflow becomes complex"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Performance Monitoring"}]},{"type":"text","text":": Watch query performance as data grows"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Schema Evolution","type":"text"}]},{"text":": Document migration paths for future architectural changes","type":"text"}],"type":"paragraph"}]}]},{"text":"Architectural Principles","level":2,"type":"heading","anchor":"Architectural-Principles"},{"inlineContent":[{"text":"This decision reinforced several key principles:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Pragmatism Over Purity","type":"text"}]},{"type":"text","text":": Sometimes practical requirements override theoretical clean design"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Domain Knowledge is Critical"}]},{"text":": Understanding geographic variability was key to the right decision","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Iterative Architecture","type":"text"}]},{"text":": Start with working solution, evolve based on real usage","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Documentation Prevents Regression"}],"type":"strong"},{"text":": Capture reasoning to avoid revisiting solved problems","type":"text"}]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"The unified ","type":"text"},{"code":"map_features","type":"codeVoice"},{"type":"text","text":" table approach balances data modeling best practices with the practical needs of wildlife conservation work, supporting both administrative zone management and granular geographic monitoring."}]}]}],"references":{"doc://earth.defend.eparcs/documentation/eparcs":{"title":"eparcs","url":"\/documentation\/eparcs","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/earth.defend.eparcs\/documentation\/eparcs","abstract":[{"text":"Electronic Parks Management System - A comprehensive wildlife conservation and anti-poaching mobile application for park rangers and wildlife conservationists.","type":"text"}]}}}